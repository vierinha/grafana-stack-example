services:

  nginx:
    image: nginx:mainline-alpine3.20
    container_name: nginx
    volumes:
      - ./config/nginx.conf:/etc/nginx/conf.d/nginx.conf:ro
      - ./config/htpasswd:/etc/nginx/.htpasswd:ro
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      - grafana
    networks:
      - grafananetwork

  grafana:
    image: grafana/grafana:11.4.0
    container_name: grafana
    volumes:
      - ./config/grafana-datasources.yml:/etc/grafana/provisioning/datasources/datasources.yaml
      - ./grafana:/var/lib/grafana
      - ./config/grafana.ini:/etc/grafana/grafana.ini
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_DEFAULT_FORCE_MIGRATION=true
    # ports:
    #   - "3000:3000"
    restart: always
    depends_on:
      - mimir
      - loki
      - tempo
    networks:
      - grafananetwork

  mimir:
    image: grafana/mimir:2.15.0
    container_name: mimir
    command: -config.file=/etc/mimir/config.yaml -runtime-config.file=/etc/mimir/runtime-config.yaml -runtime-config.reload-period=60s
    volumes:
      - ./config/mimir.yaml:/etc/mimir/config.yaml
      - ./config/mimir-runtime.yaml:/etc/mimir/runtime-config.yaml
      - ./mimir/data:/mimir
    restart: always
    # ports:
    #   - "9009:9009"
    networks:
      - grafananetwork

  loki:
    image: grafana/loki:3.3.2
    container_name: loki
    command: -config.file=/etc/loki/config.yaml
    volumes:
      - ./config/loki.yaml:/etc/loki/config.yaml
      - ./loki/data:/loki
    restart: always
    # ports:
    #   - "3100:3100"
    networks:
      - grafananetwork

  tempo:
    image: grafana/tempo:2.7.0
    container_name: tempo
    command: [ "-config.file=/etc/tempo/config.yaml" ]
    volumes:
      - ./config/tempo.yaml:/etc/tempo/config.yaml
      - ./tempo/data:/var/tempo
  #   ports:
  #     - "4317:4317"  # otlp grpc
  #     - "4318:4318"  # otlp http
    restart: always
    networks:
      - grafananetwork

  alloy:
    image: grafana/alloy:v1.5.1
    container_name: alloy
    command: run --disable-reporting --server.http.listen-addr=0.0.0.0:12345 --storage.path=/var/lib/alloy/data /etc/alloy/config.alloy
    volumes:
      - ./config/config.alloy:/etc/alloy/config.alloy
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always
    # ports:
    #   - 12345:12345
    #   - "4318:4318"
    depends_on:
      - nginx
    networks:
      - grafananetwork

  prometheus:
    image: prom/prometheus:v3.1.0
    container_name: prometheus
    command: --log.level=error
    volumes:
      - ./config/prometheus.yaml:/prometheus/prometheus.yml
    restart: always
    ports:
      - "9090:9090"
    depends_on:
      - nginx
    networks:
      - grafananetwork

  # otelcollectorapp:
  #   image: otel/opentelemetry-collector-contrib:0.104.0
  #   container_name: otelcollectorapp
  #   volumes:
  #     - ./config/otelcollectorapp.yaml:/etc/otelcol-contrib/config.yaml
  #   restart: always
  #   ports:
  #     - "4318:4318"
  #   networks:
  #     - grafananetwork

networks:
  grafananetwork:
    driver: bridge
